# for iterm
# 256色端末を使用する
set -g default-terminal "screen-256color"
#set-option -ga terminal-overrides ",xterm-256color:Tc"

# prefixキーをC-aに変更する
set -g prefix C-j

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# C-a*2でtmux内のプログラムにC-aを送る
# bind C-a send-prefix

# | でペインを立てに分割する
# bind | split-window -h

# - でペインを横に分割する
# bind - split-window -v

# ウィンドウ作成時にカレントディレクトリを維持する
bind c new-window -c "#{pane_current_path}"
bind % split-window -hc "#{pane_current_path}"
bind '"' split-window -vc "#{pane_current_path}"

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# マウス操作を有効にする
set-option -g mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Styles
set  -g status-style                 'bg=black,fg=green'
set  -g window-status-format         ' #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})(#{pane_current_command})#F '
set  -g window-status-current-format ' #I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})(#{pane_current_command})#F '
setw -g window-status-style          'bg=black,fg=green'
setw -g window-status-current-style  'bg=black,fg=green,bold,underscore'
set  -g pane-active-border-style     'fg=yellow'

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S"
## 右パネルを設定する
set -g status-right \
"#(ciji '{{.WIFI.SSID}} {{.WIFI.Intensity}}')"\
" #(ciji '{{.Battery.TMUXColor}}{{.Battery.Percentage}}%%{{.Battery.VProgressBar}}')"\
" #[fg=cyan]%a %H:%M"\
" #(ciji '{{.MoonPhase.EMOJI}}') "
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top

# 復数ペインへの同期入力
bind s setw synchronize-panes on
bind S setw synchronize-panes off

###############################################################################
# copy mode
###############################################################################
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Linux with xsel
if "which xsel" "bind-key -t vi-copy y copy-pipe 'xsel -bi'"
if "which xsel" "bind-key ] run 'tmux set-buffer -- \"$(xsel -bo)\"; tmux paste-buffer'"

# MacOS with pbcopy/paste
# need: $ brew install reattach-to-user-namespace
if "which pbcopy"  "set -g default-command \"reattach-to-user-namespace -l $SHELL\""
if "which pbcopy"  "unbind   -Tcopy-mode-vi Enter"
if "which pbcopy"  "bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"
if "which pbpaste" "bind-key ] run 'reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer'"

# Setup 'v' to begin selection as in Vim
bind -Tcopy-mode-vi v      send -X begin-selection
bind -Tcopy-mode-vi C-v    send -X rectangle-toggle
bind -Tcopy-mode-vi C-c    send -X cancel
bind -Tcopy-mode-vi Escape send -X clear-selection

- set_fact: date="{{lookup('pipe','date +%Y%m%d')}}"


# - name: Install oh-my-fish
#   shell: curl -sSL http://get.oh-my.fish | fish
#   args:
#     executable: /bin/bash
#     creates: ~/.local/share/omf/


- name: Change user shell
  shell: |
      shell_x=$(dscl localhost -read Local/Default/Users/$USER UserShell | cut -d' ' -f2)
      shell_y=$(which fish)
      cat /etc/shells | grep ${shell_y} &> /dev/null || sudo sh -c "echo ${shell_y} >> /etc/shells"
      if [[ ${shell_x} != ${shell_y} ]]; then
        sudo chsh -s ${shell_y} ${USER}
      fi
  args:
      executable: /bin/bash
  changed_when: false

- name: Install anyenv
  git: repo={{ item.repo }} dest={{ item.dest }} update=no
  with_items:
    - { repo: 'https://github.com/riywo/anyenv',          dest: '~/.anyenv' }
    - { repo: 'https://github.com/znz/anyenv-update.git', dest: '~/.anyenv/plugins/anyenv-update' }
    - { repo: 'https://github.com/znz/anyenv-git.git',    dest: '~/.anyenv/plugins/anyenv-git' }


- name: Update anyenv
  shell: |
      eval "$(anyenv init -)"
      anyenv update
      rm -f /tmp/anyenv-updated-*
      touch /tmp/anyenv-updated-{{ date }}
  args:
      executable: /bin/bash
      creates: /tmp/anyenv-updated-{{ date }}


- name: Install envs
  shell: |
      eval "$(anyenv init -)"
      anyenv install {{ item.env }}
      eval "$(anyenv init -)"
      {{ item.env }} install {{ item.version  }}
      {{ item.env }} rehash
  args:
      executable: /bin/bash
      creates: ~/.anyenv/envs/{{ item.env }}/versions/{{ item.version }}
  with_items:
    - { env: 'ndenv',  version: '9.7.1' }
    - { env: 'ndenv',  version: '9.3.0' }
    - { env: 'ndenv',  version: '8.11.4' }
    - { env: 'ndenv',  version: '6.13.0' }
    - { env: 'ndenv',  version: '6.10.3' }
    - { env: 'goenv',  version: '1.12.0' }
    - { env: 'pyenv',  version: '3.6.4' }
    # - { env: 'phpenv', version: '5.6.36' }
    - { env: 'phpenv', version: '7.2.7' }


- name: Install pyenv-virtualenv
  git:
    repo: 'https://github.com/yyuu/pyenv-virtualenv'
    dest: '~/.anyenv/envs/pyenv/plugins/pyenv-virtualenv'
    update: no


- name: Setup pyenvs
  shell: |
      eval "$(anyenv init -)"
      pyenv virtualenv {{ item.version }} {{ item.env }}
  args:
      executable: /bin/bash
      creates: ~/.anyenv/envs/pyenv/versions/{{ item.env }}
  with_items:
    - { env: 'example',  version: '3.6.4' }


- name: Upgrade pyenv pip-packages
  shell: |
      eval "$(anyenv init -)"
      pyenv local {{ item.env }}
      pip install -r pyenvs/{{ item.env }}.txt
      rm -rf .python-version
  args:
      executable: /bin/bash
  with_items:
    - { env: 'example' }
